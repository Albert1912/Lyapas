rules constraint - non terminal symbols count <= 1<<16
rules alternative constraint - alternative index <= 1<<16

L1 - rules array
L2 - rules array metadata

L1(offset) - left part
L1(offset+1;offset + length) - right part

L2(0) - count
L2(1 + 3*i) - offset
L2(1 + 3*i+1) - length
L2(1 + 3*i+2) - alternative index


F1 - token array
L2 - token array metadata
L2(0) - count
L2(1 + 4*i) - offset in F1, points to start of token
L2(1 + 4*i+1) - length of token
L2(1 + 4*i+2) - token id
L2(1 + 4*i+3) - position in text
token format:
token value

*******************************************************

L1 - metadata
L1(0) - function start
L1(1) - function end
L1(2) - input args start
L1(3) - input args length
L1(4) - output args start
L1(5) - output args length
L1(6) - variables start
L1(7) - variables length
L1(8) - complexes start
L1(9) - complexes length
F2 - function names
L3 - input args
L3(2*i) - type (0 - var, 1 - F complex, 2 - L complex)
L3(2*i+1) - value (var_index or complex index)
L4 - output args
L4(2*i) - type (0 - var, 1 - F complex, 2 - L complex)
L4(2*i+1) - value (var_index or complex index)
F5 - variables
L6 - complexes
L6(3*i) - type (0 - F complex, 1 - L complex)
L6(3*i+1) - complex index
L6(3*i+2) - capacity
L7 - strings metadata
L7(0) - start
L7(1) - end
F8 - strings

*******************************************************
⇒ ¬ % ∨ & ⊕ ∆ ∇ § → ↪ ↦ ↑ ≠ > < ≥ ≤ @ \ #

name              token          id
variable          [a-z]          1 +
constant          [0-9]+         2 +
assign            ⇒              3 +
lpar              (              4 +
rpar              )              5 +
complex           [LF][0-9]+     6 +
up_arrow          ↑              7 +
jump              →              8 +
jump_not_zero     ↦              9 +
jump_zero         ↪              10 +
mark              §              11 +
equal             =              12 +
not_equal         ≠              13 +
less              <              14 +
greater           >              15 +
less_or_equal     ≤              16 +
greater_or_equal  ≥              17 +
dot               .              18 +
star              *              19 +
plus              +              20 +
minus             -              21 +
slash             /              22 +
at                @              23 +
name              [a-zA-Z0-9]+   24 +
comma             ,              25 +
inversion         ¬              26 +
percent           %              27 +
or                ∨              28 +
and               &              29 +
xor               ⊕              30 +
inc               ∆              31 +
dec               ∇              32 +
eof               eof            33 +
ret               **             34 +
length            Q[0-9]+        35 +
capacity          S[0-9]+        36 +
semicolon         ;              37 +
zeroing           O              38 +
maximize          ⁻               39 +
random            X              40 +
time              T              41 +
string            '[a-zA-Z0-9]+' 42 +
console           C              43 +
swap              ⇔              44 +
lowerone          !              45 +
singleconst       I[0-63]        48 +

